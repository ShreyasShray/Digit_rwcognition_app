{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shreyas shray\\\\Desktop\\\\Realtime-Image-detection-master\\\\screens\\\\Camera.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\n\nvar PickImage = function (_React$Component) {\n  _inherits(PickImage, _React$Component);\n\n  var _super = _createSuper(PickImage);\n\n  function PickImage() {\n    var _this;\n\n    _classCallCheck(this, PickImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      image: null\n    };\n\n    _this.getPermissionAsync = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadImage = function _callee2(uri) {\n      var data, filename, type, fileToUpload;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = new FormData();\n              filename = uri.split(\"/\")[uri.split(\"/\").length - 1];\n              type = \"image/\" + uri.split('.')[uri.split('.').length - 1];\n              fileToUpload = {\n                uri: uri,\n                name: filename,\n                type: type\n              };\n              data.append(\"digit\", fileToUpload);\n              fetch(\"https://f292a3137990.ngrok.io/Predict-digit\", {\n                method: \"POST\",\n                body: data,\n                headers: {\n                  \"content-type\": \"multipart/form-data\"\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                console.log(\"Success:\", result);\n              }).catch(function (error) {\n                console.error(\"Error:\", error);\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._pickImage = function _callee3() {\n      var result;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 3:\n              result = _context3.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.data\n                });\n\n                console.log(result.uri);\n\n                _this.uploadImage(result.uri);\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(PickImage, [{\n    key: \"render\",\n    value: function render() {\n      var image = this.state.image;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"Pick an image from camera roll\",\n        onPress: this._pickImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPermissionAsync();\n    }\n  }]);\n\n  return PickImage;\n}(React.Component);\n\nexport { PickImage as default };","map":{"version":3,"sources":["C:/Users/Shreyas shray/Desktop/Realtime-Image-detection-master/screens/Camera.js"],"names":["React","ImagePicker","Permissions","PickImage","state","image","getPermissionAsync","Platform","OS","askAsync","CAMERA_ROLL","status","alert","uploadImage","uri","data","FormData","filename","split","length","type","fileToUpload","name","append","fetch","method","body","headers","then","response","json","result","console","log","catch","error","_pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","cancelled","setState","flex","alignItems","justifyContent","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Button, Image, View, Platform } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Permissions from \"expo-permissions\";\n\nexport default class PickImage extends React.Component {\n  state = {\n    image: null,\n  };\n\n  render() {\n    let { image } = this.state;\n\n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Button\n          title=\"Pick an image from camera roll\"\n          onPress={this._pickImage}\n        />\n      </View>\n    );\n  }\n\n  componentDidMount() {\n    this.getPermissionAsync();\n  }\n\n  getPermissionAsync = async () => {\n    if (Platform.OS !== \"web\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  uploadImage = async (uri) => {\n    const data = new FormData();\n    let filename = uri.split(\"/\")[uri.split(\"/\").length - 1]\n    let type = `image/${uri.split('.')[uri.split('.').length - 1]}`\n    const fileToUpload = {\n      uri: uri,\n      name: filename,\n      type: type,\n    };\n    data.append(\"digit\", fileToUpload);\n    fetch(\"https://f292a3137990.ngrok.io/Predict-digit\", {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(\"Success:\", result);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n    _pickImage = async () => {\n      try {\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 1,\n        });\n        if (!result.cancelled) {\n          this.setState({ image: result.data });\n          console.log(result.uri)\n          this.uploadImage(result.uri);\n        }\n      } catch (E) {\n        console.log(E);\n      }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}